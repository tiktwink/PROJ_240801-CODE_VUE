/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-a5dfe884.mjs';
import { defineComponent, computed, h, createVNode } from 'vue';
import Item from './Item.mjs';
import props from '../props.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useTNodeDefault } from '../../hooks/tnode.mjs';
import { getDefaultNode } from '../../utils/render-tnode.mjs';
import { getPanels } from '../core/helper.mjs';
import { expendClickEffect, valueChangeEffect } from '../core/effect.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-d33c5d88.mjs';
import 'tdesign-icons-vue-next';
import '../core/className.mjs';
import '../../_chunks/dep-4d2c39b6.mjs';
import '../../_chunks/dep-0e21c401.mjs';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-a71c8f5b.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-1c9d9f8d.mjs';
import '../../_chunks/dep-437d10c6.mjs';
import '../../_chunks/dep-28a28c00.mjs';
import '../../_chunks/dep-003c9b00.mjs';
import '../../_chunks/dep-6ad32365.mjs';
import '../../_chunks/dep-10c900d8.mjs';
import '../../_chunks/dep-1c5d24dd.mjs';
import '../../_chunks/dep-e98ea432.mjs';
import '../../_chunks/dep-75628739.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../_chunks/dep-0223e29d.mjs';
import '../../_chunks/dep-c31faaef.mjs';
import '../../_chunks/dep-5f15268c.mjs';
import '../../_chunks/dep-c70e40ae.mjs';
import '../../_chunks/dep-6e7655db.mjs';
import '../../_chunks/dep-62ad5a36.mjs';
import '../../_chunks/dep-f76ec896.mjs';
import '../../_chunks/dep-4382b808.mjs';
import '../../_chunks/dep-0894e3ae.mjs';
import '../../_chunks/dep-0ced8e2e.mjs';
import '../../_chunks/dep-fb9941c5.mjs';
import '../../_chunks/dep-1494b54a.mjs';
import '../../_chunks/dep-0e5b2b76.mjs';
import '../../_chunks/dep-f3a27c4c.mjs';
import '../../_chunks/dep-e3204123.mjs';
import '../../_chunks/dep-b6946d89.mjs';
import '../../_chunks/dep-3d61d8a6.mjs';
import '../../_chunks/dep-88c02450.mjs';
import '../../_chunks/dep-f7067d3d.mjs';
import '../../_chunks/dep-cd1b7f96.mjs';
import '../../_chunks/dep-eea784eb.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-0c808c2e.mjs';
import '../../_chunks/dep-4c103c66.mjs';
import '../../utils/set-style.mjs';
import '../../_chunks/dep-db7324ec.mjs';
import '../../_chunks/dep-d090226f.mjs';
import '../../_chunks/dep-6ea85de8.mjs';
import '../../_chunks/dep-92ce9c6c.mjs';
import '../../_chunks/dep-3b84887f.mjs';
import '../../_chunks/dep-5d7be5c6.mjs';
import '../../config-provider/type.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-36f0e4f4.mjs';
import '../../_chunks/dep-190cc0b3.mjs';
import '../../_chunks/dep-29a308fc.mjs';
import '../../_chunks/dep-18af437d.mjs';
import '../../_chunks/dep-bc75f95c.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-69da1a80.mjs';
import '../../_chunks/dep-017fc8db.mjs';
import '../../_chunks/dep-2f0b4a52.mjs';
import '../../_chunks/dep-3c3faac3.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-c4a2d318.mjs';
import '../../_chunks/dep-143154a5.mjs';
import '../../_chunks/dep-69610219.mjs';
import '../../_chunks/dep-04ba5b59.mjs';
import '../../_chunks/dep-05b564d9.mjs';
import '../../_chunks/dep-f41eb5b9.mjs';
import '../../_chunks/dep-8cc70cb2.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-8325f53f.mjs';
import '../../_chunks/dep-b20328d2.mjs';
import '../../_chunks/dep-ae66bf73.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';

var Panel = defineComponent({
  name: "TCascaderSubPanel",
  props: {
    option: props.option,
    empty: props.empty,
    trigger: props.trigger,
    onChange: props.onChange,
    loading: props.loading,
    loadingText: props.loadingText,
    cascaderContext: {
      type: Object
    }
  },
  setup: function setup(props) {
    var renderTNodeJSXDefault = useTNodeDefault();
    var COMPONENT_NAME = usePrefixClass("cascader");
    var _useConfig = useConfig("cascader"),
      globalConfig = _useConfig.globalConfig;
    var panels = computed(function () {
      return getPanels(props.cascaderContext.treeNodes);
    });
    var handleExpand = function handleExpand(node, trigger) {
      var propsTrigger = props.trigger,
        cascaderContext = props.cascaderContext;
      expendClickEffect(propsTrigger, trigger, node, cascaderContext);
    };
    var renderItem = function renderItem(node, index) {
      var optionChild = node.data.content ? getDefaultNode(node.data.content(h)) : renderTNodeJSXDefault("option", {
        params: {
          item: node.data,
          index: index
        }
      });
      return createVNode(Item, {
        "key": node.value,
        "node": node,
        "optionChild": optionChild,
        "cascaderContext": props.cascaderContext,
        "onClick": function onClick() {
          handleExpand(node, "click");
        },
        "onMouseenter": function onMouseenter() {
          handleExpand(node, "hover");
        },
        "onChange": function onChange() {
          valueChangeEffect(node, props.cascaderContext);
        }
      }, null);
    };
    var renderList = function renderList(treeNodes) {
      var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      return createVNode("ul", {
        "class": ["".concat(COMPONENT_NAME.value, "__menu"), "narrow-scrollbar", _defineProperty(_defineProperty({}, "".concat(COMPONENT_NAME.value, "__menu--segment"), segment), "".concat(COMPONENT_NAME.value, "__menu--filter"), isFilter)],
        "key": "".concat(COMPONENT_NAME, "__menu").concat(index)
      }, [treeNodes.map(function (node) {
        return renderItem(node, index);
      })]);
    };
    var renderPanels = function renderPanels() {
      var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
      return inputVal ? renderList(treeNodes, true) : panels.value.map(function (treeNodes2, index) {
        return renderList(treeNodes2, false, index !== panels.value.length - 1, index);
      });
    };
    return function () {
      var content;
      if (props.loading) {
        content = renderTNodeJSXDefault("loadingText", createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__panel--empty")
        }, [globalConfig.value.loadingText]));
      } else {
        content = panels.value.length ? renderPanels() : renderTNodeJSXDefault("empty", createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__panel--empty")
        }, [globalConfig.value.empty]));
      }
      return createVNode("div", {
        "class": ["".concat(COMPONENT_NAME.value, "__panel"), _defineProperty({}, "".concat(COMPONENT_NAME.value, "--normal"), panels.value.length && !props.loading)]
      }, [content]);
    };
  }
});

export { Panel as default };
//# sourceMappingURL=Panel.mjs.map
