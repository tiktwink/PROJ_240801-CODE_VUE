/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { c as cloneDeep_1 } from '../_chunks/dep-db7324ec.mjs';
import '../_chunks/dep-437d10c6.mjs';
import '../_chunks/dep-d090226f.mjs';
import '../_chunks/dep-c31faaef.mjs';
import '../_chunks/dep-5f15268c.mjs';
import '../_chunks/dep-c70e40ae.mjs';
import '../_chunks/dep-6e7655db.mjs';
import '../_chunks/dep-6ad32365.mjs';
import '../_chunks/dep-d33c5d88.mjs';
import '../_chunks/dep-62ad5a36.mjs';
import '../_chunks/dep-f76ec896.mjs';
import '../_chunks/dep-4382b808.mjs';
import '../_chunks/dep-0894e3ae.mjs';
import '../_chunks/dep-0ced8e2e.mjs';
import '../_chunks/dep-fb9941c5.mjs';
import '../_chunks/dep-75628739.mjs';
import '../_chunks/dep-1494b54a.mjs';
import '../_chunks/dep-0e5b2b76.mjs';
import '../_chunks/dep-f3a27c4c.mjs';
import '../_chunks/dep-e3204123.mjs';
import '../_chunks/dep-10c900d8.mjs';
import '../_chunks/dep-1c5d24dd.mjs';
import '../_chunks/dep-b6946d89.mjs';
import '../_chunks/dep-6ea85de8.mjs';
import '../_chunks/dep-92ce9c6c.mjs';
import '../_chunks/dep-3b84887f.mjs';

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var selectInjectKey = Symbol("selectProvide");
var getSingleContent = function getSingleContent(value, optionsMap) {
  var option = optionsMap.value.get(value);
  return (option === null || option === void 0 ? void 0 : option.label) || (value === null || value === void 0 ? void 0 : value.toString());
};
var getMultipleContent = function getMultipleContent(value, optionsMap) {
  var res = [];
  var _iterator = _createForOfIteratorHelper(value),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var iterator = _step.value;
      var resLabel = getSingleContent(iterator, optionsMap);
      if (resLabel) {
        res.push(resLabel);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return res;
};
var getNewMultipleValue = function getNewMultipleValue(innerValue, optionValue) {
  var value = cloneDeep_1(innerValue);
  var valueIndex = value.indexOf(optionValue);
  if (valueIndex < 0) {
    value.push(optionValue);
  } else {
    value.splice(valueIndex, 1);
  }
  return {
    value: value,
    isCheck: valueIndex < 0
  };
};

export { getMultipleContent, getNewMultipleValue, getSingleContent, selectInjectKey };
//# sourceMappingURL=helper.mjs.map
