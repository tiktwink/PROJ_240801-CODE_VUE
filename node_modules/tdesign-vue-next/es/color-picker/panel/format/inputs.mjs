/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../../_chunks/dep-4d2c39b6.mjs';
import { _ as _defineProperty } from '../../../_chunks/dep-a5dfe884.mjs';
import { defineComponent, computed, reactive, watch, createVNode, mergeProps } from 'vue';
import { t as throttle_1 } from '../../../_chunks/dep-1e57b42e.mjs';
import props from '../../props.mjs';
import '../../utils/index.mjs';
import { Input } from '../../../input/index.mjs';
import { InputNumber } from '../../../input-number/index.mjs';
import { FORMAT_INPUT_CONFIG } from './config.mjs';
import { Color } from '../../../_common/js/color-picker/color.mjs';
import '../../../_chunks/dep-0e21c401.mjs';
import '../../../_chunks/dep-d33c5d88.mjs';
import '../../../_chunks/dep-437d10c6.mjs';
import '../../../_chunks/dep-67dca09a.mjs';
import '../../../_chunks/dep-62ad5a36.mjs';
import '../../../_chunks/dep-f76ec896.mjs';
import '../../../_chunks/dep-6ad32365.mjs';
import '../../../_chunks/dep-8ee0987a.mjs';
import '../../../_chunks/dep-e98ea432.mjs';
import '../../../_chunks/dep-75628739.mjs';
import '../../../_common/js/color-picker/index.mjs';
import '../../../_common/js/color-picker/cmyk.mjs';
import '../../../_common/js/color-picker/draggable.mjs';
import '../../../_chunks/dep-e7c4d7b2.mjs';
import '../../../_common/js/color-picker/gradient.mjs';
import '../../../_chunks/dep-5d7be5c6.mjs';
import '../../../_chunks/dep-10c900d8.mjs';
import '../../../_chunks/dep-1c5d24dd.mjs';
import '../../../_chunks/dep-b20328d2.mjs';
import '../../../_chunks/dep-e7ab8269.mjs';
import '../../../_chunks/dep-a71c8f5b.mjs';
import '../../../input/input.mjs';
import '../../../_chunks/dep-8325f53f.mjs';
import 'tdesign-icons-vue-next';
import '../../../input/props.mjs';
import '../../../form/hooks.mjs';
import '../../../hooks/useConfig.mjs';
import '../../../config-provider/useConfig.mjs';
import '../../../_chunks/dep-6e7655db.mjs';
import '../../../_chunks/dep-db7324ec.mjs';
import '../../../_chunks/dep-d090226f.mjs';
import '../../../_chunks/dep-c31faaef.mjs';
import '../../../_chunks/dep-5f15268c.mjs';
import '../../../_chunks/dep-c70e40ae.mjs';
import '../../../_chunks/dep-4382b808.mjs';
import '../../../_chunks/dep-0894e3ae.mjs';
import '../../../_chunks/dep-0ced8e2e.mjs';
import '../../../_chunks/dep-fb9941c5.mjs';
import '../../../_chunks/dep-1494b54a.mjs';
import '../../../_chunks/dep-0e5b2b76.mjs';
import '../../../_chunks/dep-f3a27c4c.mjs';
import '../../../_chunks/dep-e3204123.mjs';
import '../../../_chunks/dep-b6946d89.mjs';
import '../../../_chunks/dep-6ea85de8.mjs';
import '../../../_chunks/dep-92ce9c6c.mjs';
import '../../../_chunks/dep-3b84887f.mjs';
import '../../../_chunks/dep-0223e29d.mjs';
import '../../../_chunks/dep-3d61d8a6.mjs';
import '../../../_chunks/dep-88c02450.mjs';
import '../../../_chunks/dep-f7067d3d.mjs';
import '../../../_chunks/dep-cd1b7f96.mjs';
import '../../../_chunks/dep-eea784eb.mjs';
import '../../../_common/js/global-config/default-config.mjs';
import '../../../_common/js/global-config/locale/zh_CN.mjs';
import '../../../_chunks/dep-0c808c2e.mjs';
import '../../../_chunks/dep-4c103c66.mjs';
import '../../../config-provider/type.mjs';
import '../../../hooks/useGlobalIcon.mjs';
import '../../../hooks/tnode.mjs';
import '../../../_chunks/dep-190cc0b3.mjs';
import '../../../_chunks/dep-003c9b00.mjs';
import '../../../_chunks/dep-29a308fc.mjs';
import '../../../_chunks/dep-18af437d.mjs';
import '../../../_chunks/dep-28a28c00.mjs';
import '../../../_chunks/dep-1c9d9f8d.mjs';
import '../../../utils/render-tnode.mjs';
import '../../../_chunks/dep-bc75f95c.mjs';
import '../../../input/useInput.mjs';
import '../../../form/const.mjs';
import '../../../hooks/index.mjs';
import '../../../hooks/icon.mjs';
import '../../../hooks/slot.mjs';
import '../../../hooks/useCommonClassName.mjs';
import '../../../hooks/useDefaultValue.mjs';
import '../../../hooks/useDestroyOnClose.mjs';
import '../../../hooks/useKeepAnimation.mjs';
import '../../../hooks/useRipple.mjs';
import '../../../utils/set-style.mjs';
import '../../../hooks/useVirtualScroll.mjs';
import '../../../hooks/useVModel.mjs';
import '../../../hooks/useImagePreviewUrl.mjs';
import '../../../_common/js/upload/utils.mjs';
import '../../../_common/js/log/log.mjs';
import '../../../input/useLengthLimit.mjs';
import '../../../_common/js/log/index.mjs';
import '../../../_common/js/utils/helper.mjs';
import '../../../_chunks/dep-3c3faac3.mjs';
import '../../../_chunks/dep-ae66bf73.mjs';
import '../../../input/useInputEventHandler.mjs';
import '../../../input/useInputWidth.mjs';
import '../../../hooks/useResizeObserver.mjs';
import '../../../input/input-group.mjs';
import '../../../input/input-group-props.mjs';
import '../../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../../input/type.mjs';
import '../../../input-number/input-number.mjs';
import '../../../button/index.mjs';
import '../../../button/button.mjs';
import '../../../loading/index.mjs';
import '../../../_chunks/dep-c4a2d318.mjs';
import '../../../_chunks/dep-143154a5.mjs';
import '../../../_chunks/dep-017fc8db.mjs';
import '../../../_chunks/dep-69610219.mjs';
import '../../../_chunks/dep-04ba5b59.mjs';
import '../../../_chunks/dep-05b564d9.mjs';
import '../../../_chunks/dep-f41eb5b9.mjs';
import '../../../_chunks/dep-8cc70cb2.mjs';
import '../../../loading/plugin.mjs';
import '../../../loading/loading.mjs';
import '../../../loading/icon/gradient.mjs';
import '../../../_common/js/loading/circle-adapter.mjs';
import '../../../_common/js/utils/set-style.mjs';
import '../../../utils/dom.mjs';
import '../../../utils/easing.mjs';
import '../../../loading/props.mjs';
import '../../../hooks/useTeleport.mjs';
import '../../../loading/type.mjs';
import '../../../button/props.mjs';
import '../../../hooks/useDisabled.mjs';
import '../../../_chunks/dep-36f0e4f4.mjs';
import '../../../button/type.mjs';
import '../../../input-number/props.mjs';
import '../../../input-number/useInputNumber.mjs';
import '../../../_common/js/input-number/number.mjs';
import '../../../_common/js/input-number/large-number.mjs';
import '../../../input-number/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FormatInputs = defineComponent({
  name: "FormatInputs",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, props), {}, {
    color: {
      type: Object
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var inputConfigs = computed(function () {
      var configs = _toConsumableArray(FORMAT_INPUT_CONFIG[props2.format]);
      if (props2.enableAlpha) {
        configs.push({
          type: "inputNumber",
          key: "a",
          min: 0,
          max: 100,
          format: function format(value) {
            return "".concat(value, "%");
          },
          flex: 1.15
        });
      }
      return configs;
    });
    var modelValue = reactive({});
    var lastModelValue = reactive({});
    var getFormatColorMap = function getFormatColorMap(type) {
      var color = props2.color;
      if (type === "encode") {
        return {
          HSV: color.getHsva(),
          HSL: color.getHsla(),
          RGB: color.getRgba(),
          CMYK: color.getCmyk(),
          CSS: {
            css: color.css
          },
          HEX: {
            hex: color.hex
          }
        };
      }
      return {
        HSV: Color.object2color(modelValue, "HSV"),
        HSL: Color.object2color(modelValue, "HSL"),
        RGB: Color.object2color(modelValue, "RGB"),
        CMYK: Color.object2color(modelValue, "CMYK"),
        CSS: modelValue.css,
        HEX: modelValue.hex
      };
    };
    var updateModelValue = function updateModelValue() {
      var format = props2.format,
        color = props2.color;
      var values = getFormatColorMap("encode")[format];
      values.a = Math.round(color.alpha * 100);
      Object.keys(values).forEach(function (key) {
        modelValue[key] = values[key];
        lastModelValue[key] = values[key];
      });
    };
    updateModelValue();
    var throttleUpdate = throttle_1(updateModelValue, 100);
    watch(function () {
      var _props2$color = props2.color,
        saturation = _props2$color.saturation,
        hue = _props2$color.hue,
        value = _props2$color.value,
        alpha = _props2$color.alpha,
        css = _props2$color.css;
      return [saturation, hue, value, alpha, css, props2.format];
    }, throttleUpdate);
    var handleChange = function handleChange(key, v) {
      if (v === lastModelValue[key]) {
        return;
      }
      var value = getFormatColorMap("decode")[props2.format];
      props2.onInputChange(value, modelValue.a / 100, key, v);
    };
    return {
      modelValue: modelValue,
      inputConfigs: inputConfigs,
      handleChange: handleChange
    };
  },
  render: function render() {
    var _this = this;
    var inputProps = _objectSpread({}, this.inputProps || {});
    return createVNode("div", {
      "class": "input-group"
    }, [this.inputConfigs.map(function (config) {
      return createVNode("div", {
        "class": "input-group__item",
        "key": config.key,
        "style": {
          flex: config.flex || 1
        }
      }, [config.type === "input" ? createVNode(Input, mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "maxlength": _this.format === "HEX" ? 9 : void 0,
        "title": _this.modelValue[config.key],
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null) : createVNode(InputNumber, mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "title": _this.modelValue[config.key],
        "min": config.min,
        "max": config.max,
        "step": 1,
        "format": config.format,
        "theme": "normal",
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null)]);
    })]);
  }
});

export { FormatInputs as default };
//# sourceMappingURL=inputs.mjs.map
