/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-a5dfe884.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-a71c8f5b.mjs';
import { defineComponent, computed, ref, onMounted, nextTick, watch, createVNode } from 'vue';
import { firstUpperCase } from '../utils/helper.mjs';
import props from './props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-d33c5d88.mjs';
import '../_chunks/dep-0e21c401.mjs';
import '../_chunks/dep-8325f53f.mjs';
import '../_chunks/dep-190cc0b3.mjs';
import '../_chunks/dep-437d10c6.mjs';
import '../_chunks/dep-003c9b00.mjs';
import '../_chunks/dep-6ad32365.mjs';
import '../_chunks/dep-10c900d8.mjs';
import '../_chunks/dep-1c5d24dd.mjs';
import '../_chunks/dep-e98ea432.mjs';
import '../_chunks/dep-75628739.mjs';
import '../_chunks/dep-29a308fc.mjs';
import '../_chunks/dep-18af437d.mjs';
import '../_chunks/dep-28a28c00.mjs';
import '../_chunks/dep-3c3faac3.mjs';
import '../_chunks/dep-b20328d2.mjs';
import '../_chunks/dep-ae66bf73.mjs';
import '../_chunks/dep-5d7be5c6.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-6e7655db.mjs';
import '../_chunks/dep-62ad5a36.mjs';
import '../_chunks/dep-f76ec896.mjs';
import '../_chunks/dep-db7324ec.mjs';
import '../_chunks/dep-d090226f.mjs';
import '../_chunks/dep-c31faaef.mjs';
import '../_chunks/dep-5f15268c.mjs';
import '../_chunks/dep-c70e40ae.mjs';
import '../_chunks/dep-4382b808.mjs';
import '../_chunks/dep-0894e3ae.mjs';
import '../_chunks/dep-0ced8e2e.mjs';
import '../_chunks/dep-fb9941c5.mjs';
import '../_chunks/dep-1494b54a.mjs';
import '../_chunks/dep-0e5b2b76.mjs';
import '../_chunks/dep-f3a27c4c.mjs';
import '../_chunks/dep-e3204123.mjs';
import '../_chunks/dep-b6946d89.mjs';
import '../_chunks/dep-6ea85de8.mjs';
import '../_chunks/dep-92ce9c6c.mjs';
import '../_chunks/dep-3b84887f.mjs';
import '../_chunks/dep-0223e29d.mjs';
import '../_chunks/dep-3d61d8a6.mjs';
import '../_chunks/dep-88c02450.mjs';
import '../_chunks/dep-f7067d3d.mjs';
import '../_chunks/dep-cd1b7f96.mjs';
import '../_chunks/dep-eea784eb.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-0c808c2e.mjs';
import '../_chunks/dep-4c103c66.mjs';
import '../config-provider/type.mjs';

var TTabNavBar = defineComponent({
  props: {
    navs: {
      type: Array
    },
    placement: props.placement,
    value: props.value
  },
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("tabs");
    var classPrefix = usePrefixClass();
    var navBarClass = computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__bar"), "".concat(classPrefix.value, "-is-").concat(props.placement)];
    });
    var navBarStyle = ref(null);
    var getStyle = function getStyle() {
      var _props$navs$i$el;
      var isVertical = ["left", "right"].includes(props.placement.toLowerCase());
      var _ref = isVertical ? ["height", "top"] : ["width", "left"],
        _ref2 = _slicedToArray(_ref, 2),
        sizePropName = _ref2[0],
        offsetPropName = _ref2[1];
      var offset = 0;
      var i = 0;
      for (; i < props.navs.length; i++) {
        var _props$navs$i;
        if (props.navs[i].props.value === props.value) {
          break;
        }
        offset += ((_props$navs$i = props.navs[i]) === null || _props$navs$i === void 0 || (_props$navs$i = _props$navs$i.el) === null || _props$navs$i === void 0 ? void 0 : _props$navs$i["client".concat(firstUpperCase(sizePropName))]) || 0;
      }
      if (!props.navs[i]) return {};
      return _defineProperty(_defineProperty({}, offsetPropName, "".concat(offset, "px")), sizePropName, "".concat(((_props$navs$i$el = props.navs[i].el) === null || _props$navs$i$el === void 0 ? void 0 : _props$navs$i$el["client".concat(firstUpperCase(sizePropName))]) || 0, "px"));
    };
    onMounted(function () {
      nextTick(function () {
        navBarStyle.value = getStyle();
      });
    });
    watch([function () {
      return props.navs;
    }, function () {
      return props.value;
    }, function () {
      return props.placement;
    }], function () {
      nextTick(function () {
        navBarStyle.value = getStyle();
      });
    });
    return function () {
      return createVNode("div", {
        "class": navBarClass.value,
        "style": navBarStyle.value
      }, null);
    };
  }
});

export { TTabNavBar as default };
//# sourceMappingURL=tab-nav-bar.mjs.map
