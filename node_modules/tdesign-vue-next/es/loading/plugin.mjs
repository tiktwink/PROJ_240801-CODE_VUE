/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-a5dfe884.mjs';
import { defineComponent, reactive, h, createApp } from 'vue';
import { m as merge_1 } from '../_chunks/dep-0223e29d.mjs';
import _Loading from './loading.mjs';
import { getAttach, addClass, removeClass } from '../utils/dom.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-d33c5d88.mjs';
import '../_chunks/dep-437d10c6.mjs';
import '../_chunks/dep-c31faaef.mjs';
import '../_chunks/dep-5f15268c.mjs';
import '../_chunks/dep-c70e40ae.mjs';
import '../_chunks/dep-6e7655db.mjs';
import '../_chunks/dep-6ad32365.mjs';
import '../_chunks/dep-62ad5a36.mjs';
import '../_chunks/dep-f76ec896.mjs';
import '../_chunks/dep-4382b808.mjs';
import '../_chunks/dep-0894e3ae.mjs';
import '../_chunks/dep-0ced8e2e.mjs';
import '../_chunks/dep-fb9941c5.mjs';
import '../_chunks/dep-75628739.mjs';
import '../_chunks/dep-1494b54a.mjs';
import '../_chunks/dep-0e5b2b76.mjs';
import '../_chunks/dep-f3a27c4c.mjs';
import '../_chunks/dep-e3204123.mjs';
import '../_chunks/dep-10c900d8.mjs';
import '../_chunks/dep-1c5d24dd.mjs';
import '../_chunks/dep-b6946d89.mjs';
import '../_chunks/dep-3d61d8a6.mjs';
import '../_chunks/dep-88c02450.mjs';
import '../_chunks/dep-f7067d3d.mjs';
import '../_chunks/dep-cd1b7f96.mjs';
import '../_chunks/dep-eea784eb.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-0c808c2e.mjs';
import '../_chunks/dep-4c103c66.mjs';
import '../_chunks/dep-a71c8f5b.mjs';
import '../_chunks/dep-0e21c401.mjs';
import './icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-4d2c39b6.mjs';
import '../_chunks/dep-8325f53f.mjs';
import '../_chunks/dep-5d7be5c6.mjs';
import '../_chunks/dep-b20328d2.mjs';
import '../_chunks/dep-3c3faac3.mjs';
import '../_chunks/dep-ae66bf73.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-bc75f95c.mjs';
import '../_chunks/dep-6ea85de8.mjs';
import '../_chunks/dep-92ce9c6c.mjs';
import '../_chunks/dep-190cc0b3.mjs';
import '../_chunks/dep-003c9b00.mjs';
import '../_chunks/dep-e98ea432.mjs';
import '../_chunks/dep-29a308fc.mjs';
import '../_chunks/dep-18af437d.mjs';
import '../_chunks/dep-28a28c00.mjs';
import '../_chunks/dep-1c9d9f8d.mjs';
import './props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/easing.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-db7324ec.mjs';
import '../_chunks/dep-d090226f.mjs';
import '../_chunks/dep-3b84887f.mjs';
import '../config-provider/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var fullScreenLoadingInstance = null;
function mergeDefaultProps(props) {
  var options = merge_1({
    fullscreen: false,
    attach: "body",
    loading: true,
    preventScrollThrough: true
  }, props);
  return options;
}
function createLoading(props) {
  var mergedProps = mergeDefaultProps(props);
  var component = defineComponent({
    setup: function setup() {
      var loadingOptions = reactive(mergedProps);
      return {
        loadingOptions: loadingOptions
      };
    },
    render: function render() {
      return h(_Loading, _objectSpread({}, this.loadingOptions));
    }
  });
  var attach = getAttach(mergedProps.fullscreen ? "body" : mergedProps.attach);
  var app = createApp(component);
  var loading = app.mount(document.createElement("div"));
  var parentRelativeClass = usePrefixClass("loading__parent--relative").value;
  var prefixClass = usePrefixClass("loading");
  var lockClass = usePrefixClass("loading--lock");
  var lockFullscreen = mergedProps.preventScrollThrough && mergedProps.fullscreen;
  if (lockFullscreen) {
    addClass(document.body, lockClass.value);
  }
  if (attach) {
    addClass(attach, parentRelativeClass);
  } else {
    console.error("attach is not exist");
  }
  var loadingInstance = {
    hide: function hide() {
      var _attach$querySelector;
      loading.loading = false;
      (_attach$querySelector = attach.querySelectorAll(".".concat(prefixClass.value))) === null || _attach$querySelector === void 0 || _attach$querySelector.forEach(function (item) {
        item.remove();
      });
      removeClass(attach, parentRelativeClass);
      removeClass(document.body, lockClass.value);
      app.unmount();
    }
  };
  return loadingInstance;
}
function produceLoading(props) {
  if (props === true) {
    fullScreenLoadingInstance = createLoading({
      fullscreen: true,
      loading: true,
      attach: "body",
      preventScrollThrough: true
    });
    return fullScreenLoadingInstance;
  }
  if (props === false) {
    fullScreenLoadingInstance.hide();
    fullScreenLoadingInstance = null;
    return;
  }
  return createLoading(props);
}
var LoadingPlugin = produceLoading;
LoadingPlugin.install = function (app) {
  app.config.globalProperties.$loading = produceLoading;
};

export { LoadingPlugin, LoadingPlugin as default };
//# sourceMappingURL=plugin.mjs.map
