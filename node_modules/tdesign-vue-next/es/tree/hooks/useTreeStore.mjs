/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-4d2c39b6.mjs';
import { p as pick_1 } from '../../_chunks/dep-1b60f9ac.mjs';
import { TreeStore } from '../../_common/js/tree/tree-store.mjs';
import '../adapt.mjs';
import { watch } from 'vue';
import '../../_chunks/dep-0e21c401.mjs';
import '../../_chunks/dep-437d10c6.mjs';
import '../../_chunks/dep-05b564d9.mjs';
import '../../_chunks/dep-10c900d8.mjs';
import '../../_chunks/dep-1c5d24dd.mjs';
import '../../_chunks/dep-d33c5d88.mjs';
import '../../_chunks/dep-e98ea432.mjs';
import '../../_chunks/dep-6ad32365.mjs';
import '../../_chunks/dep-75628739.mjs';
import '../../_chunks/dep-5f15268c.mjs';
import '../../_chunks/dep-c70e40ae.mjs';
import '../../_chunks/dep-6e7655db.mjs';
import '../../_chunks/dep-62ad5a36.mjs';
import '../../_chunks/dep-f76ec896.mjs';
import '../../_chunks/dep-4382b808.mjs';
import '../../_chunks/dep-0894e3ae.mjs';
import '../../_chunks/dep-003c9b00.mjs';
import '../../_chunks/dep-d5c54b49.mjs';
import '../../_chunks/dep-0e5b2b76.mjs';
import '../../_chunks/dep-f3a27c4c.mjs';
import '../../_chunks/dep-b6946d89.mjs';
import '../../_chunks/dep-f41eb5b9.mjs';
import '../../_chunks/dep-e3204123.mjs';
import '../../_chunks/dep-fb9941c5.mjs';
import '../../_chunks/dep-e56cdb74.mjs';
import '../../_chunks/dep-3b84887f.mjs';
import '../../_chunks/dep-f7067d3d.mjs';
import '../../_chunks/dep-88c02450.mjs';
import '../../_chunks/dep-e7c4d7b2.mjs';
import '../../_chunks/dep-a5dfe884.mjs';
import '../../_chunks/dep-ae66bf73.mjs';
import '../../_chunks/dep-5d7be5c6.mjs';
import '../../_chunks/dep-2c32b9c0.mjs';
import '../../_chunks/dep-413727e7.mjs';
import '../../_chunks/dep-017fc8db.mjs';
import '../../_chunks/dep-2f0b4a52.mjs';
import '../../_chunks/dep-1494b54a.mjs';
import '../../_chunks/dep-3d61d8a6.mjs';
import '../../_chunks/dep-190cc0b3.mjs';
import '../../_chunks/dep-29a308fc.mjs';
import '../../_chunks/dep-18af437d.mjs';
import '../../_chunks/dep-28a28c00.mjs';
import '../../_chunks/dep-cd1b7f96.mjs';
import '../../_chunks/dep-c31faaef.mjs';
import '../../_chunks/dep-0ced8e2e.mjs';
import 'mitt';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-009e46c9.mjs';
import '../../_chunks/dep-b20328d2.mjs';
import '../../_chunks/dep-c9bc2340.mjs';
import '../../_chunks/dep-36f0e4f4.mjs';
import '../../_chunks/dep-83d6a01b.mjs';
import '../../_chunks/dep-04ba5b59.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-3c3faac3.mjs';
import '../../_chunks/dep-8bcdb054.mjs';
import '../../_chunks/dep-d090226f.mjs';
import '../../_chunks/dep-6ea85de8.mjs';
import '../../_chunks/dep-92ce9c6c.mjs';
import '../../_chunks/dep-dd2681d3.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-1c9d9f8d.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-a71c8f5b.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-db7324ec.mjs';
import '../../_chunks/dep-0223e29d.mjs';
import '../../_chunks/dep-eea784eb.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-0c808c2e.mjs';
import '../../_chunks/dep-4c103c66.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-bc75f95c.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-69da1a80.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-c4a2d318.mjs';
import '../../_chunks/dep-143154a5.mjs';
import '../../_chunks/dep-69610219.mjs';
import '../../_chunks/dep-8cc70cb2.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-8325f53f.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_chunks/dep-1e57b42e.mjs';
import '../../_chunks/dep-67dca09a.mjs';
import '../../_chunks/dep-8ee0987a.mjs';

function useTreeStore(state) {
  var props = state.props,
    context = state.context,
    refProps = state.refProps;
  var valueMode = props.valueMode,
    filter = props.filter,
    keys = props.keys;
  var store = new TreeStore({
    valueMode: valueMode,
    filter: filter
  });
  var tValue = state.vmValue[0];
  var tActived = state.vmActived[0];
  var tExpanded = state.vmExpanded[0];
  var updateStoreConfig = function updateStoreConfig() {
    var storeProps = pick_1(props, ["expandAll", "expandLevel", "expandMutex", "expandParent", "activable", "activeMultiple", "disabled", "disableCheck", "checkable", "draggable", "checkStrictly", "load", "lazy", "valueMode", "filter", "allowFoldNodeOnFilter"]);
    store.setConfig(storeProps);
  };
  var updateExpanded = function updateExpanded() {
    var expandParent = props.expandParent;
    if (!Array.isArray(tExpanded.value)) return;
    var expandedMap = /* @__PURE__ */new Map();
    tExpanded.value.forEach(function (val) {
      expandedMap.set(val, true);
      if (expandParent) {
        var node = store.getNode(val);
        if (node) {
          node.getModel().getParents().forEach(function (tn) {
            expandedMap.set(tn.value, true);
          });
        }
      }
    });
    var expandedArr = Array.from(expandedMap.keys());
    store.setExpanded(expandedArr);
  };
  var filterChanged = false;
  var prevExpanded = null;
  var expandFilterPath = function expandFilterPath() {
    if (!props.allowFoldNodeOnFilter) return;
    if (!filterChanged) return;
    filterChanged = false;
    if (props.filter) {
      if (!prevExpanded) {
        prevExpanded = store.getExpanded();
      }
      var pathValues = [];
      var allNodes = store.getNodes();
      allNodes.forEach(function (node) {
        if (node.vmIsLocked) {
          pathValues.push(node.value);
        }
      });
      store.setExpanded(pathValues);
    } else if (prevExpanded) {
      store.replaceExpanded(prevExpanded);
      prevExpanded = null;
    }
  };
  var checkFilterExpand = function checkFilterExpand(newFilter, previousFilter) {
    if (!props.allowFoldNodeOnFilter) return;
    filterChanged = newFilter !== previousFilter;
  };
  var handleLoad = function handleLoad(info) {
    var node = info.node;
    var evtCtx = {
      node: node.getModel()
    };
    if (Array.isArray(tValue.value) && tValue.value.length > 0) {
      store.replaceChecked(tValue.value);
    }
    if (Array.isArray(tExpanded.value) && tExpanded.value.length > 0) {
      store.replaceExpanded(tExpanded.value);
    }
    if (Array.isArray(tActived.value) && tActived.value.length > 0) {
      store.replaceActived(tActived.value);
    }
    if (props !== null && props !== void 0 && props.onLoad) {
      props === null || props === void 0 || props.onLoad(evtCtx);
    }
    context.emit("load", evtCtx);
  };
  var rebuild = function rebuild(list) {
    store.reload(list || []);
    store.refreshNodes();
    if (Array.isArray(tValue.value)) {
      store.setChecked(tValue.value);
    }
    updateExpanded();
    if (Array.isArray(tActived.value)) {
      store.setActived(tActived.value);
    }
    store.refreshState();
  };
  function initStore() {
    store.setConfig({
      keys: keys
    });
    updateStoreConfig();
    store.append(props.data || []);
    store.refreshNodes();
    if (Array.isArray(tValue.value)) {
      store.setChecked(tValue.value);
    }
    updateExpanded();
    if (Array.isArray(tActived.value)) {
      store.setActived(tActived.value);
    }
    store.emitter.on("load", handleLoad);
    store.emitter.on("update", expandFilterPath);
  }
  initStore();
  state.setStore(store);
  watch(function () {
    return _toConsumableArray(tValue.value || []);
  }, function (nVal) {
    store.replaceChecked(nVal);
  });
  watch(function () {
    return _toConsumableArray(tExpanded.value || []);
  }, function (nVal) {
    store.replaceExpanded(nVal);
  });
  watch(function () {
    return _toConsumableArray(tActived.value || []);
  }, function (nVal) {
    store.replaceActived(nVal);
  });
  watch(refProps.filter, function (nVal, previousVal) {
    checkFilterExpand(nVal, previousVal);
  });
  watch(refProps.keys, function (keys2) {
    store.setConfig({
      keys: keys2
    });
  });
  return {
    store: store,
    rebuild: rebuild,
    checkFilterExpand: checkFilterExpand,
    updateStoreConfig: updateStoreConfig,
    updateExpanded: updateExpanded,
    expandFilterPath: expandFilterPath
  };
}

export { useTreeStore as default };
//# sourceMappingURL=useTreeStore.mjs.map
