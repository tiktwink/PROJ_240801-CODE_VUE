/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-a5dfe884.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-6e7655db.mjs';
import { i as isBoolean_1 } from '../../_chunks/dep-36f0e4f4.mjs';
import { computed, nextTick } from 'vue';
import { d as dayjs } from '../../_chunks/dep-0c808c2e.mjs';
import { COMPONENT_NAME } from '../const.mjs';
import '../../hooks/useConfig.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-d33c5d88.mjs';
import '../../_chunks/dep-437d10c6.mjs';
import '../../_chunks/dep-6ad32365.mjs';
import '../../_chunks/dep-62ad5a36.mjs';
import '../../_chunks/dep-f76ec896.mjs';
import '../../_chunks/dep-75628739.mjs';
import '../../_chunks/dep-db7324ec.mjs';
import '../../_chunks/dep-d090226f.mjs';
import '../../_chunks/dep-c31faaef.mjs';
import '../../_chunks/dep-5f15268c.mjs';
import '../../_chunks/dep-c70e40ae.mjs';
import '../../_chunks/dep-4382b808.mjs';
import '../../_chunks/dep-0894e3ae.mjs';
import '../../_chunks/dep-0ced8e2e.mjs';
import '../../_chunks/dep-fb9941c5.mjs';
import '../../_chunks/dep-1494b54a.mjs';
import '../../_chunks/dep-0e5b2b76.mjs';
import '../../_chunks/dep-f3a27c4c.mjs';
import '../../_chunks/dep-e3204123.mjs';
import '../../_chunks/dep-10c900d8.mjs';
import '../../_chunks/dep-1c5d24dd.mjs';
import '../../_chunks/dep-b6946d89.mjs';
import '../../_chunks/dep-6ea85de8.mjs';
import '../../_chunks/dep-92ce9c6c.mjs';
import '../../_chunks/dep-3b84887f.mjs';
import '../../_chunks/dep-5d7be5c6.mjs';
import '../../_chunks/dep-0223e29d.mjs';
import '../../_chunks/dep-3d61d8a6.mjs';
import '../../_chunks/dep-88c02450.mjs';
import '../../_chunks/dep-f7067d3d.mjs';
import '../../_chunks/dep-cd1b7f96.mjs';
import '../../_chunks/dep-eea784eb.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-4c103c66.mjs';
import '../../config-provider/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getDefaultControllerConfigData = function getDefaultControllerConfigData() {
  var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return {
    visible: visible,
    disabled: false,
    mode: {
      visible: true,
      radioGroupProps: {}
    },
    year: {
      visible: true,
      selectProps: {}
    },
    month: {
      visible: true,
      selectProps: {}
    },
    weekend: {
      visible: true,
      showWeekendButtonProps: {},
      hideWeekendButtonProps: {}
    },
    current: {
      visible: true,
      currentDayButtonProps: {},
      currentMonthButtonProps: {}
    }
  };
};
function userController(props, state) {
  var _useConfig = useConfig(COMPONENT_NAME),
    globalConfig = _useConfig.globalConfig;
  var options = computed(function () {
    var dayJsFilterDate = dayjs("".concat(state.curSelectedYear, "-").concat(state.curSelectedMonth));
    var re = {
      isShowWeekend: state.isShowWeekend,
      filterDate: dayJsFilterDate.toDate(),
      formattedFilterDate: dayJsFilterDate.format(props.format),
      mode: state.curSelectedMode
    };
    return re;
  });
  var configData = computed(function () {
    var _ref, _props$controllerConf;
    var controllerConfig = (_ref = (_props$controllerConf = props.controllerConfig) !== null && _props$controllerConf !== void 0 ? _props$controllerConf : globalConfig.value.controllerConfig) !== null && _ref !== void 0 ? _ref : true;
    if (isBoolean_1(controllerConfig)) {
      return getDefaultControllerConfigData(controllerConfig);
    }
    return _objectSpread(_objectSpread({}, getDefaultControllerConfigData()), controllerConfig);
  });
  var visible = computed(function () {
    return !!configData.value && configData.value.visible;
  });
  function checkControllerVisible(name) {
    var re = true;
    var conf = configData.value;
    if (!conf || !conf.visible || conf[name] === false || conf[name] && !conf[name].visible) {
      re = false;
    }
    return re;
  }
  function checkControllerDisabled(name, propsName) {
    var re = false;
    var conf = configData.value;
    if (conf && (conf.disabled || conf[name] && conf[name][propsName] && conf[name][propsName].disabled)) {
      re = true;
    }
    return re;
  }
  function emitControllerChange() {
    nextTick(function () {
      isFunction_1(props.onControllerChange) && props.onControllerChange(_objectSpread({}, options.value));
    });
  }
  return {
    options: options,
    configData: configData,
    visible: visible,
    checkControllerVisible: checkControllerVisible,
    checkControllerDisabled: checkControllerDisabled,
    emitControllerChange: emitControllerChange
  };
}

export { userController };
//# sourceMappingURL=useController.mjs.map
