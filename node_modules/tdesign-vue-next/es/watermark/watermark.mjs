/**
 * tdesign v1.9.3
 * (c) 2024 tdesign
 * @license MIT
 */

import { defineComponent, ref, reactive, computed, onMounted, watch, createVNode } from 'vue';
import props from './props.mjs';
import generateBase64Url from '../_common/js/watermark/generateBase64Url.mjs';
import randomMovingStyle from '../_common/js/watermark/randomMovingStyle.mjs';
import injectStyle from '../_common/js/utils/injectStyle.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useMutationObserver } from './hooks.mjs';
import { useContent } from '../hooks/tnode.mjs';
import '../_chunks/dep-a5dfe884.mjs';
import '../_chunks/dep-d33c5d88.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-6e7655db.mjs';
import '../_chunks/dep-437d10c6.mjs';
import '../_chunks/dep-6ad32365.mjs';
import '../_chunks/dep-62ad5a36.mjs';
import '../_chunks/dep-f76ec896.mjs';
import '../_chunks/dep-db7324ec.mjs';
import '../_chunks/dep-d090226f.mjs';
import '../_chunks/dep-c31faaef.mjs';
import '../_chunks/dep-5f15268c.mjs';
import '../_chunks/dep-c70e40ae.mjs';
import '../_chunks/dep-4382b808.mjs';
import '../_chunks/dep-0894e3ae.mjs';
import '../_chunks/dep-0ced8e2e.mjs';
import '../_chunks/dep-fb9941c5.mjs';
import '../_chunks/dep-75628739.mjs';
import '../_chunks/dep-1494b54a.mjs';
import '../_chunks/dep-0e5b2b76.mjs';
import '../_chunks/dep-f3a27c4c.mjs';
import '../_chunks/dep-e3204123.mjs';
import '../_chunks/dep-10c900d8.mjs';
import '../_chunks/dep-1c5d24dd.mjs';
import '../_chunks/dep-b6946d89.mjs';
import '../_chunks/dep-6ea85de8.mjs';
import '../_chunks/dep-92ce9c6c.mjs';
import '../_chunks/dep-3b84887f.mjs';
import '../_chunks/dep-5d7be5c6.mjs';
import '../_chunks/dep-0223e29d.mjs';
import '../_chunks/dep-3d61d8a6.mjs';
import '../_chunks/dep-88c02450.mjs';
import '../_chunks/dep-f7067d3d.mjs';
import '../_chunks/dep-cd1b7f96.mjs';
import '../_chunks/dep-eea784eb.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-0c808c2e.mjs';
import '../_chunks/dep-4c103c66.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-8325f53f.mjs';
import '../_chunks/dep-190cc0b3.mjs';
import '../_chunks/dep-003c9b00.mjs';
import '../_chunks/dep-e98ea432.mjs';
import '../_chunks/dep-29a308fc.mjs';
import '../_chunks/dep-18af437d.mjs';
import '../_chunks/dep-28a28c00.mjs';
import '../_chunks/dep-1c9d9f8d.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-bc75f95c.mjs';

var _Watermark = defineComponent({
  name: "TWatermark",
  props: props,
  setup: function setup(props2) {
    var backgroundImage = ref("");
    var watermarkRef = ref();
    var watermarkContentRef = ref();
    var parent = ref();
    var offset = reactive(props2.offset || []);
    var gapX = computed(function () {
      return props2.movable ? 0 : props2.x;
    });
    var gapY = computed(function () {
      return props2.movable ? 0 : props2.y;
    });
    var rotate = computed(function () {
      return props2.movable ? 0 : props2.rotate;
    });
    var backgroundRepeat = computed(function () {
      if (props2.movable) {
        return "no-repeat";
      }
      return props2.isRepeat ? "repeat" : "no-repeat";
    });
    var offsetLeft = computed(function () {
      return offset[0] || gapX.value / 2;
    });
    var offsetTop = computed(function () {
      return offset[1] || gapY.value / 2;
    });
    var bgImageOptions = computed(function () {
      return {
        width: props2.width,
        height: props2.height,
        rotate: rotate.value,
        lineSpace: props2.lineSpace,
        alpha: props2.alpha,
        gapX: gapX.value,
        gapY: gapY.value,
        watermarkContent: props2.watermarkContent,
        offsetLeft: offsetLeft.value,
        offsetTop: offsetTop.value
      };
    });
    var injectWaterMark = function injectWaterMark() {
      generateBase64Url(bgImageOptions.value, function (base64Url) {
        backgroundImage.value = base64Url;
      });
      var keyframesStyle = randomMovingStyle();
      injectStyle(keyframesStyle);
    };
    onMounted(function () {
      injectWaterMark();
      parent.value = watermarkRef.value.parentElement;
      useMutationObserver(parent.value, function (mutations) {
        if (props2.removable) return;
        mutations.forEach(function (mutation) {
          if (mutation.type === "childList") {
            var removeNodes = mutation.removedNodes;
            removeNodes.forEach(function (node) {
              var element = node;
              if (element === watermarkRef.value) {
                parent.value.appendChild(element);
              }
              if (element === watermarkContentRef.value) {
                watermarkRef.value.appendChild(element);
              }
            });
          }
        });
      }, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    });
    watch(function () {
      return props2.watermarkContent;
    }, injectWaterMark, {
      deep: true
    });
    return {
      gapX: gapX,
      gapY: gapY,
      backgroundRepeat: backgroundRepeat,
      backgroundImage: backgroundImage,
      watermarkRef: watermarkRef,
      watermarkContentRef: watermarkContentRef,
      bgImageOptions: bgImageOptions
    };
  },
  render: function render() {
    var COMPONENT_NAME = usePrefixClass("watermark");
    var renderContent = useContent();
    return createVNode("div", {
      "style": {
        position: "relative",
        overflow: "hidden",
        width: "100%"
      },
      "class": COMPONENT_NAME.value,
      "ref": "watermarkRef"
    }, [renderContent("default", "content"), createVNode("div", {
      "ref": "watermarkContentRef",
      "style": {
        zIndex: this.zIndex,
        position: "absolute",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        width: "100%",
        height: "100%",
        backgroundSize: "".concat(this.gapX + this.width, "px"),
        pointerEvents: "none",
        backgroundRepeat: this.backgroundRepeat,
        backgroundImage: "url('".concat(this.backgroundImage, "')"),
        animation: this.movable ? "watermark infinite ".concat(this.moveInterval * 4 / 60, "s") : "none"
      }
    }, null)]);
  }
});

export { _Watermark as default };
//# sourceMappingURL=watermark.mjs.map
